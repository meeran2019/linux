
----------------------------------------------------------------------------------------------------------------------------
RHEL8 ROOT PASSWORD, REGISTER SUBSCRIPTION & MANAGING REPOSITORIES: 
----------------------------------------------------------------------------------------------------------------------------

SETTING ROOT PASSWORD THROUGH BOOT: 

    1. While booting, select e (edit)
    2. search linux, ctrl + e to move end and add 'rd.break'
    3. enter ctrl + x 
    4. to mount ,  mount -o remount,rw /sysroot 
    5. chroot /sysroot 
    6. passwd 
    7. touch ./autorelabel 
    8. exit , exit 


SET SELinux ON SYSTEM IN ENFORCING MODE: 
    
    Security Enhanced Linux 

    getenforce                  To check selinux mode 
    vim /etc/selinux/config     set the variable selinux=enforcing 
    systemctl reboot            Reboot the system 
    sestatus or getenforce      To check the status 
    man selinux                 Manual help page 


SOFTWARE REPOSITORIES IN RHEL 8: 

    There are 2 different repositories, 

        BaseOS          -   Specific to kernel, OS 
        AppStream       -   Specific to application. Consists of modules and packages. 
        DNF (Dandified yum): 
            DNF is package manager for rpm based systems. 
            It is updated version of yum (yellowdog updated modifier)
            It is default package manager in RHEL8.


SETUP REPOSITORIES: 

    GPG - GNU Privacy Guard: 
        It allows to encrypt and sign the data. 

    dnf repolist                To list repos configured on system 
    dnf grouplist hidden        To list group available packages. 
    man yum.conf                Manual help page
    dnf clean all               To clear cache 
    vim /etc/yum.repos.d/system.repo: 
        add baseos & appstream details. 
    
    1. Get the repo path and copy to the new directory path. 
    2. Add the xxx.repo file in /etc/yum.repos.d/
    3. system.repo file: 
            [repo-id]
            name=
            baseurl=file:///file-path  or https://url-path or ftp:// 
            enabled=1/0
            gpgcheck=1/0
            gpgkey=url 
    4. yum.conf is applies to all but if maintained under .repo , .repo will take higher precedence. 
    5. to verify, dnf install lftp 


REGISTER RHEL SYSTEM TO REDHAT SUBSCRIPTION: 

    subscription-manager register --serverurl url-path      -   register system to subscription portal.
    subscription-manager attach --auto                      -   add redhat.repo under etc/yum.repos.d 

    default server-url is maintained at /etc/rhsm/rhsm.conf

    --serverurl     -   to use server url 
    --baseurl       -   to use base url for repos.


----------------------------------------------------------------------------------------------------------------------------
DEPLOY, CONFIGURE & MAINTAIN SYSTEMS:
----------------------------------------------------------------------------------------------------------------------------

ASSIGNING HOSTNAME: 

    hostnamectl or hostname                     -   To display current hostname assigned to system.
    hostnamectl set-hostname system.example.com -   To assign new host name to system.
    man hostnamectl                             -   Manual help 
    hostnamectl status  or hostnamectl          -   To get detailed host information.

    can also update hostname in /etc/hostname and reboot.


CONFIGURING ETHERNET CONNECTION WITH STATIC IPV4 ADDRESS AND DNS IP: 

    Install the "yum install NetworkManager" 


    nmcli connection show                       -   To display existing connections configured on different interfaces.
    ip addr                                     -   To display existing connection with IP address and status.

    nmcli connection add con-name system type ethernet ifname enp0s3 ipv4.addresses 192.168.99.10/24 ipv4.gateway 192.168.99.1                                        -   To configure ethernet interface with ipv4 ip & gateway address.

    nmcli connection modify system ipv4.dns 192.168.99.254 ipv4.method manual   -   To configure DNS IP address on connection and make connection static. Must be manual to make static. 

    nmcli connection up system                  -   To activate connection.
    systemctl restart NetworkManager            -   To restart network service.
    /etc/resolv.conf                            -   To verify DNS ip address.
    
    /etc/sysconfig/network-scripts/             -   Location of connection profile ifcfg-system. It is interface configuration file. 
    For static IP, BOOTPROTO=none.

    route -n                                    -   Gives routing table.


CONFIGURING SYSTEM TO BOOT IN GRAPHICAL TARGET: 

    Run Level       Description                               Targets
    0               Shutdown and poweroff the system.         runlevel0.target,poweroff.target
    1               Setup rescue shell.                       runlevel1.target,system.target
    2               Setup non graphical multi user system.    runlevel2.target,multi-user.target
    3               Setup non graphical multi user system.    runlevel3.target,multi-user.target
    4               Setup non graphical multi user system.    runlevel4.target,multi-user.target
    5               Setup graphical multi user system.        runlevel5.target,graphical.target
    6               Shutdown and reboot the system.           runlevel6.target,reboot.target

    dnf group install Workstation       -   Install workstation environment.
    systemctl isolate graphical.target  -   to change systemd target in current session.
    systemctl set-default graphical.target -    To set graphical target as default systemd target.
    cd /usr/lib/systemd/system          -   Directory containing systemd units of installed packages.
    cd /etc/systemd/system              -   directory containing local systemd configurations.
    man systemd.unit                    -   manual help
    systemctl get-default               -   To get the current target.


SCHEDULING CRON JOB AS ROOT USER IN OTHER USERS CRONTAB: 

    Create the user: 
        usearadd sheik              -   To create user sheik 
        passwd lisa                 -   To setup a password for sheik.
    
    Change Permission of script and user: 
        chmod +x /test.sh           -   To add execute permission for the script.
        chown owner:group file-name -   To change ownership 
    
    Update other user crontab: 
        crontab -u sheik -e         -   To edit other users crontab as root. 
        crontab -u sheik -l         -   To list other users crontab.     

        * * * * * (Minute Hour Day Month Day-of-week)
            Day-of-week - 0 to 7 (0/7 for sunday)

    /etc/cron.allow     -   user must be listed to use crontab  
    /etc/cron.deny      -   user must be listed to deny to use crontab. 

    both files does not exists, then only root user can use crontab. 

    crontab -u user     -   user option can only use by root user. 
    /var/spool/cron/    -   Path to check any cron maintained for the user.


SCHEDULING CRON JOB AS NORMAL USER: 

    setfacl -m u:bob:rwx /file-name             -   To modify the file permission using setfacl 
    getfacl file-name                           -   To get the file access. 

    This is same as above except cronjob is created under user, 
        1. Switch to bob user, crontab -e (To add cron tab) 
        2. crontab -l (To list crontab)
        3. Logs can be verified at /var/log/cron file. 
        4. crontab -r  (To delete crontab)


SCHEDULING JOBS USING "at" COMMAND:

    dnf install at                          -   Install package for atd 
    systemctl start atd                     -   start the service 
    systemctl enable atd                    -   enable the service.
    atq                                     -   Display jobs in queue
    atrm                                    -   To delete jobs.
    at now + 30 minutes                     -   Execute at to schedule the job.

    /etc/at.allow                           -   allowed users  
    /etc/at.deny                            -   denied users. 

    1. at now + 1 minute   (ctrl + D to exit )
    2. atq 
    3. atrm job-id 


CONFIGURE SERVICE TO START AT SYSTEM BOOT: 
    
    autofs tools used for mounting and unmounting the file system automatically. 
    
    dnf install autofs          -   install autofs 
    systemctl start autofs      -   start the service 
    systemctl enable autofs     -   start at boot time.
    systemctl status autofs     -   service status . 


CONFIGURING SYSTEM TO USE TIME SERVICES: 

    There are 2 types of clock, hardware and software (system) clocks. 

    NTP - Network Time Protocol which provides time source. 
    It uses chronyd service, in RHEL 8, provides both client and server process.

    systemctl status chronyd                -   To checek status of chronyd service. 
    timedatectl set-timezone TIME_ZONE      -   To et time zone.
    timedatectl set-time HH:MM:SS           -   To set time. 
    hwclock -w                              -   To synch hardware clock to system time. 
    /etc/chrony.conf   (server server-name iburst)  -   To configure system to use NTP server. 
    chrony sources                          -   shows list of time server. 


WORKING WITH MODULE STREAMS-dnf: 

    dnf module list             -       To list available module 
    dnf module info perl        -       To list different streams for perl module. 
    dnf module info --profile perl:5.26     -   To list specific stream.
    dnf install @perl:5.26      -       To install specific stream 
    dnf module info mariadb | grep stream   -   To get stream details.


MODIFYING BOOTLOADER (GRUB2) SETTINGS: 

    /etc/default/grub 
        Add biosdevname=0 net.ifnames=0 to variable GRUB_CMDLINE_LINUX 
        Remove rhgb and quiet 

    rhgb    -   redhat graphical boot. It us GUI mode booting screen with most of information is hidden while users sees a rotating activity icon spinning.
    quiet   -   hides most boot messages before rhgb starts. 

    grub2-mkconfig -o /boot/grub2/grub.cfg 


----------------------------------------------------------------------------------------------------------------------------
UNDERSTAND AND USE OF ESSENTIAL TOOLS: 
----------------------------------------------------------------------------------------------------------------------------

MAKING SSH CONNECTION TO REMOTE HOST: 

    systemctl status sshd               -   To check status of sshd service.
    ssh user-name@ip-address/host-name  -   To establish ssh connection for LDAP user. 
    Enter password                      -   LDAP user password. 
    man ssh                             -   Manual help page for ssh. 
    man sshd                            -   Manual help page for ssh daemon.
    netstat -an                         -   Display network configurations. It can be used to check if connection established. 

    SSH service listens on Port 22.
    ~/.ssh/known_hosts                  -   It maintains and check the hosts in users home directory. 

    NOTE: ssh ip-address/host-name      -   Without user, whoever executing (root/user) will be taken as user-name. 


SECURELY COPY FILES ACROSS HOSTS USING SCP: 

    scp /root/notes.txt user-name@ip-address/host-name:/tmp/        -   To copy files from one host to another using SSH copy (SCP) 
    man scp                                                         -   Manual help page.

    NOTE: By default, if destination path is not available, it will be created.
            By using /dir/ (trailing slash at end) , will throw error if file is not available.

    
USING GREP TO MATCH LINES STARTING WITH PATTERNS: 

    ^   -   To match with first character. 
    $   -   To match with last character. 

    grep -E "^name" file.txt        -   To search expression in file. 
    egrep   -   extended regular expression. 
    -i      -   ignore case 
    -v      -   invert match (not matching)
    -w      -   match compelte line. 
    -n      -   display line number. 


USING GREP FOR NON MATCHING PATTERN: 

    egrep -v 'sed|Sed' > test.txt       -   To copy non match to file.

    grep    -   to search pattern using regular expressions.
        consider + ? | as pattern and use them with backslash. 

    egrep   -   to search pattern using extended regular expressions.
        consider + ? | as meta characters. 


USING FIND COMMANDS TO LIST FILES OWNED BY USER: 

    find / -user lisa -type f 
    find directory-to-search -user user-name -type file-type 

    f - regular file 
    c - character 
    d - directory 


USING FIND COMMAND TO LOCATE FILE USING NAME OF FILE: 

    find / -name file.conf -type f 
    find directory-to-search -name file-name -type file-type 

    >   -   copy both error and output to file 
    1>  -   copy output alone 
    2>  -   copy error alone 


USING FIND TO SEARCH FILES WITH EXTENSION .TXT: 

    find / -name "*.txt" -type f > /text 2>&1 
    find directory-to-search -name expression -type file-type 

    2>&1    -   to copy both standard error

    find / -name "*.txt" -type f > test          -   Display error in terminal and output to file. 
    find / -name "*.txt" -type f 1> test         -   Display error in terminal and output to file. 
    find / -name "*.txt" -type f 2> test         -   Display output in terminal and error in file. 

    find / -name "*.txt" -type f > test 2>&1    -   Wont display output in terminal but write to file. 


USING FIND COMMAND TO SAVE ALL DIRECTORIES OWNED BY USER: 

    find / -user lisa -type d > lisa.txt 
    find directory-to-search -user user-name -type type-of-file 

    find / -user lisa -type d -delete   -   this will delete the directory. 


USING FIND COMMANDS TO LIST ALL FILES AND DIRECTORIES BASED ON UID: 

    find / -uid 1002 

    find directory-to-search -uid uid-no 


USING TAR COMMAND TO ARCHIVE AND COMPRESS CONTENTS OF DIRECTORY: 

    TAR - Tape Archive 

    -c      -   create 
    -f      -   file 
    -j      -   create in .bzip2 
    -v      -   verbose 
    -z      -   create in .zip 
    -x      -   extract contents from compressed file. 
    -C      -   path to extract the file 

    tar -cjvf home.tar.bz2 /home 
    tar -cjvf archived-files.tar.bz2 files-to-archive 

    f requires argument and this must be in end. 

    ls -l --block-size=MB       -   To display block size.

    tar -cvf linux-tutorial.tar linux-tutorial/             -   archive the file in tar format. 
    bzip2 linux-tutorial.tar                                -   compress the file in .bzip2 format. 
    tar -cjvf linux-tutorial.tar.bz2 linux-tutorial/        -   combine both archive and compress in .bz2 format 


USING TAR COMMAND TO EXTRACT THE DATA FROM COMPRESSED FILE: 

    tar -xvf notes.tar.bz2 -C /path-to-extract              -   extract the file 


USING TAR TO ARCHIVE CONTENTS WITH GZIP COMPRESSION: 

    tar -cvf linux-tutorial.tar linux-tutorial/                 -   archive the file. 
    gzip linux-tutorial.tar                                     -   compress the file in gzip format 
    tar -czvf linux-tutorial.tar.gz linux-tutorial              -   combine both archive and compress in zip format. 


DECOMPRESS THE FILE USING GUNZIP AND BUNZIP2: 

    gunzip file-name.tar.gz             -   uncompress in gzip format. 
    bunzip2 file-name.tar.bz2           -   uncompress in bzip2 format. 

    NOTE: This change from .gzip or .bz2 format to TAR format. 


FILE SYSTEM PERMISSIONS AND COMMANDS: 

    r       read 
    w       read & write 
    x       execute 

    drwxrwxr-x. 3 meeran meeran 31 Apr 26 21:52 linux-tutorial

    -       type of file. It can be d for directory. 
    rwx     user/owner access 
    rwx     group access 
    r-x     others access 
    meeran  user owner 
    meeran  group owner 

    NOTE:   In Directory, to give read/write permission, then it require execution permission also. 
            without execution permission, cannot list or execute any commands in directory.


    chown   -   To set user and group ownership of file. 
    chmod   -   To change permission level. 
    setfacl -   To configure ACL for specific user. 

    chmod u+rwx file-name               -   add read, write and execute file permission to user.
    chmod g-w file-name                 -   remove write permission at group level.
    chmod a+r file-name                 -   provides all system user with read access. (a for all system user)
    chmod ug-r file-name                -   removes the read permission of both user and group.
    chmod ugo+w file-name               -   provides write permission to user, group and others.

    file-name can be absolute or relative path. 

    chown user:group -R file-name       -   to change owner and group user. -R is used for recursive. 
    groupadd group-name                 -   to add new group 

    Can also use octal number format: 

        chmod 777 file-name         -   provide all access to all. 
        chmod 776 file-name         -   not provide execute access to others. 

    Access Control List: 

        It is used to configure additional user access. 

        Access ACL - To configure access on files and directories. It is not apply to new directories/files under that. 
        Default ACL - To configure access on directories. If new directories are created, applies to that as well. 


CONFIGURING ACL ON FILE AND DIRECTORY: 

    setfacl -m u:sheik:rwx /acl/private             -   To configure Access ACL.
    setfacl -R -m u:bob:rwx /acl/bob_dir/           -   To configure Access ACL recursively. 
    setfacl -m d:u:bob:rwx /acl/bob_dir/            -   To configure Default ACL, so any future directories and files take this ACL.

    getfacl file/directory                          -   To get the ACL details. 

    drwxrwxr-x+ 2 root root 32 May  2 05:54 bob_dir -   If (+) added means, ACL is applied. 


CREATING SYSMBOLIC LINKS: 

    Soft Link: 
        Also known as symbolic link.
        It act as pointer or reference to the original file. 
        It takes different inode and permission.    
        If original file is removed, softlink will not work. 
        It is comparitively slower. 

        ln -s source-file soft-link-name 
        ln -s process1.txt soft-link.txt

    Hard Link: 
        It act as copy (mirrored) of selected file. 
        It take the same inode and permission. 
        If original file is removed, still data can be accessed. 

        ln source-file hard-link-name 
        ln process.txt hard-link.txt


----------------------------------------------------------------------------------------------------------------------------
OPERATE RUNNING SYSTEMS AND PROCESS
----------------------------------------------------------------------------------------------------------------------------

ADJUSTING PRIORITY OF PROCESS WITH RENICE: 

    Nice is basically to run a program with modified scheduling priority. 

    Renice is used to alter the priority of running process. 

    TOP command provides a dynamic real time view of running system. It displays system summaary information as well list of process or threads. 

    PS command is used to list the current running process and their PID along with other information. 

    nice value can be between -20 to 19. Lesser the nice value, more CPU resources will be used. Higher the nicer value, less CPU value will be used. 

    nice -n -5 dd if=/dev/zero of=/dev/null     -> if=input file, /dev/zero=generates with zero, of=output file, /dev/null=null file.
    renice -n 5 -p PID                          -> change the nice value.

    ctrl + z    -   To stop the process. 
    bg          -   To run in background.


RUNNING A JOB IN BACKGROUND WITH PREDEFIND NICE VALUE: 

    nice -n 10 sleep 3600 &         -   Run the sleep command by using nice.  & to run in backend. 
    ps aux | grep sleep             -   To get the process details.
    top -p PID                      -   To get process details in TOP. 
    nice -n 10 sleep 3600           -   To run in foreground. CTRL+C will cancel process. CTRL+Z & bg will stop and run in background.

    ps aux        -   List all process with user name, memory, cpu and command used. 
    

KILL PROCESS FORCEFULLY:     

    kill -9 PID                     -   To kill process ID.


TUNING KERNEL PARAMETER "vm.swappiness" PERSISTENTLY: 

    SWAP is a space on disk that is used when amount of physical RAM memory is full. 
    When linux runs out of RAM, inactive pages are moved from RAM to SWAP space. 
    Swap space can take from dedicated swap partition or swap file. 

    swappiness is used how aggressive kernel will swap memory pages. 
    Higher value will increase aggressiveness and lower value will descrease amount of swap.
    Values between 1 and 60. 0 for disable. 10 is recommended.

    sysctl - kernel variables. 

    For permanent, in /etc/sysctl.conf file, vm.swappiness=10 

    For temporary, sysctl -w vm.swappiness=10

    sysctl -a                       -   To display all system control. 
    systemctl -a | grep swap        -   To filter the specific system control. 
    systemctl -w vm.swappiness=20   -   To edit temporarily. (vm - virtual memory)
    /etc/sysctl.conf                -   To edit permanently and requires reboot to effect. 

    /proc/sys                       -   kernel virtual interface. 



DISABLING IPV4 PACKET FORWARDING USING SYSCTL.D: 

    IP Forwarding is ability of system to accept incoming network packets on one interface, recognize that it not meant for itself and it should be passed to another network and then forwards it accordingly. 

    net.ipv4.ip_forward=1       (0 for OFF and 1 for ON)

    sysctl -a | grep net.ipv4.ip_forward 
    sysctl -w net.ipv4.ip_forward=0         -   To disable ipv4 packet forward.
    /etc/sysctl.conf                        -   To permanently do change and require reboot to effect. 

    
















